#!/bin/bash
# cd /d S:\zero\box\aa201
# vagrant ssh
# ping baidu.com
# ping 192.168.0.231
# ping 192.168.0.231
# su root，也可以执行 sudo -i 直接切换到 root 用户。
# 卸载wget — 命令 yum remove wget
# yum install -y wget
# sudo apt-get install wget
# sudo yum install -y wget
# wget --version
# wget --version =GNU Wget 1.19.5 built on linux-gnu.=
# wget -O - http://192.168.0.231/hello.sh | sh
# wget -O - http://192.168.0.231/acs/a/s/ipssh/ipsshxsa/hello.sh | sh
# wget -O - http://192.168.0.231/acs/a/s/ipssh/ipsshxsa/sh1.192.168.0.227.sh | sh

# wget -O - --ftp-user=admin --ftp-password=1 ftp://192.168.0.231/a/hello.sh | sh
# wget -O - --ftp-user=admin --ftp-password=1 ftp://192.168.0.231/a/mnt/s/a/ai/ais/i/home/going/workspace/am/website/aw/iisxa/acs/a/s/ipssh/ipsshxsa/hello.sh | sh
# wget -O - --ftp-user=admin --ftp-password=1 ftp://192.168.0.231/a/mnt/s/a/ai/ais/i/home/going/workspace/am/website/aw/iisxa/acs/a/s/ipssh/ipsshxsa/sh1.192.168.0.227.sh | sh

# chmod 777 ./hello.sh
# ./hello.sh
# wget http://www.baidu.com。命令会直接在当前目录下载一个index.html的文件
# wget www.baidu.com
# wget http://www.baidu.com
# wget http://192.168.0.231
# wget --ftp-user=admin --ftp-password=1 ftp://192.168.0.231/hello.sh
# wget http://192.168.0.231/hello.sh
# cat /etc/sysconfig/network-scripts/ifcfg-eth0
# cat /etc/resolv.conf
# vi /etc/resolv.conf
# 直接找到网卡配置文件/etc/sysconfig/network-scripts/ifcfg-eth0添加一行：
#不允许Network Manager管理NM_CONTROLLED="no"
# sudo echo "DNS1=192.168.0.1" >> /etc/sysconfig/network-scripts/ifcfg-eth0
# sudo echo "DNS2=8.8.8.8" >> /etc/sysconfig/network-scripts/ifcfg-eth0
# sudo echo "PEERDNS=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
#  sudo echo "NM_CONTROLLED=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0

##对接口添加dns信息；编辑 cat /etc/sysconfig/network-scripts/ifcfg-eth0，具体的X根据你的网卡确定，添加
# 所以 ，要想永久使自己的域名设置生效，不能直接修改 /etc/resolv.conf，而是设置/etc /sysconfig/network-scripts/ifcfg-eth0（仅限centos操作系统）或。
# DNS1=192.168.0.1
# DNS2=8.8.8.8
# 在使用前要先安装dos2unix 
# yum install -y dos2unix
# dos2unix -n windows win2unix
# resolv.conf  Generated by NetworkManager‘http’
# more /etc/resolv.conf
# sudo echo "nameserver 192.168.0.1" >> /etc/resolv.conf
# sudo echo "nameserver 114.114.114.114" >> /etc/resolv.conf
# sudo echo "nameserver 8.8.8.8" >> /etc/resolv.conf
# sudo echo "nameserver 8.8.4.4" >> /etc/resolv.conf
# 重启一些服务
# systemctl restart NetworkManager
# systemctl restart systemd-resolved.service
# sudo service networking restart 
# sudo /etc/init.d/networking restart

# 查看结果：
# systemd-resolve --status
# 改成OpenDNS的一组解析服务器即可：将其它的nameserver删除
# •nameserver 208.67.222.222
#  •nameserver 208.67.220.220
#root 用户没有默认密码，也不能直接登录。需要 root 权限的命令可以通过在命令前添加 sudo 来执行，也可以执行 sudo -i 直接切换到 root 用户。
echo "HelloWorld.2"
sleep 1 && echo "sleep 1/2" 
sleep 1 && echo "sleep 2/2"
echo "--uname -m    x86_64 输出“x86_64”则是64位"
echo "uname -m" 
uname -m
#
if [ -f "/home/going/workspace/acs/a/c/download/go/go1.20.7.linux-amd64.tar.gz" ];then
 echo "110,file exist yes,文件存在,/home/going/workspace/acs/a/c/download/go/go1.20.7.linux-amd64.tar.gz"
else
 echo "115,file exist not,文件不存在,/home/going/workspace/acs/a/c/download/go/go1.20.7.linux-amd64.tar.gz" 
fi
#
if [ -d "/home/going/workspace/acs/a/c/download/go" ];then
 echo "120,path exist yes,目录存在,/home/going/workspace/acs/a/c/download/go"
else
 echo "125,path exist not,目录不存在,/home/going/workspace/acs/a/c/download/go"
fi

if  !  [ -d "/home/going/workspace/acs/a/syncxmin/" ]; then
 mkdir -p /home/going/workspace/acs/a/syncxmin/
 chmod 777 /home/going/workspace/acs/a/syncxmin/
fi

if  !  [ -d "/home/going/workspace/acs/a/s/etc/ssh/ssh_key/" ]; then
 mkdir -p /home/going/workspace/acs/a/s/etc/ssh/ssh_key/
 chmod 777 /home/going/workspace/acs/a/s/etc/
 chmod 777 /home/going/workspace/acs/a/s/etc/ssh/
 chmod 777 /home/going/workspace/acs/a/s/etc/ssh/ssh_key/
fi

if  !  [ -d "/home/going/workspace/acs/a/c/etc" ]; then
 mkdir -p /home/going/workspace/acs/a/c/code/go
 cd /home/going/workspace/acs/a/c/code/go
 mkdir -p /home/going/workspace/acs/a/c/
 mkdir -p /home/going/workspace/acs/a/s/
 chmod 777 /home/going/workspace/acs/a/
 chmod 777 /home/going/workspace/acs/a/c/
 chmod 777 /home/going/workspace/acs/a/s/
 chmod 777 "/etc/selinux/config"
 chmod 777 "/etc/ssh/sshd_config"
 chmod 777 "/home/going/workspace/acs/a/s/etc/ssh/ssh_key/"
 # cd /home/going/workspace/acs/a/s/code/go
 # chmod 777 /home/going/workspace/acs/a/s/code/go/HelloWorld1
 # /home/going/workspace/acs/a/s/code/go/HelloWorld1
fi

#begin.zbak
if  !  [ -d "/home/going/workspace/acs/a/c/zbak/" ]; then
 mkdir -p /home/going/workspace/acs/a/c/zbak/
 cd /home/going/workspace/acs/a/c/zbak/
fi

#/etc/selinux/config=/etc/sysconfig/network-scripts/ifcfg-eth0=/etc/ssh/sshd_config
chmod 777 "/etc/selinux/config"
chmod 777 "/etc/sysconfig/network-scripts/ifcfg-eth0"
chmod 777 "/etc/ssh/sshd_config"

if  !  [ -f "/home/going/workspace/acs/a/c/zbak/config.old" ];then
 cp /etc/selinux/config /home/going/workspace/acs/a/c/zbak/config.old
fi

if  !  [ -f "/home/going/workspace/acs/a/c/zbak/ifcfg-eth0.old" ];then
 cp /etc/sysconfig/network-scripts/ifcfg-eth0 /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.old
fi

if  !  [ -f "/home/going/workspace/acs/a/c/zbak/sshd_config.old" ];then
 cp /etc/ssh/sshd_config /home/going/workspace/acs/a/c/zbak/sshd_config.old
fi

 cd /home/going/workspace/acs/a/c/zbak/
 ls

#/etc/selinux/config=/etc/sysconfig/network-scripts/ifcfg-eth0=/etc/ssh/sshd_config
rm -rf /home/going/workspace/acs/a/c/zbak/config.new
cp /etc/selinux/config /home/going/workspace/acs/a/c/zbak/config.new

rm -rf /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.new
cp /etc/sysconfig/network-scripts/ifcfg-eth0 /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.new

rm -rf /home/going/workspace/acs/a/c/zbak/sshd_config.new
cp /etc/ssh/sshd_config /home/going/workspace/acs/a/c/zbak/sshd_config.new
 cd /home/going/workspace/acs/a/c/zbak/
 ls
#end.zbak

if  !  [ -d "mkdir -p /home/going/workspace/acs/a/c/download/go" ]; then
 echo "mkdir -p /home/going/workspace/acs/a/c/download/go" 
 mkdir -p /home/going/workspace/acs/a/c/download/go
 cd /home/going/workspace/acs/a/c/download/go
fi

if  !  [ -f "/home/going/workspace/acs/a/c/download/go/go1.20.7.linux-amd64.tar.gz" ];then
 cd /home/going/workspace/acs/a/c/download/go
 echo "wget http://192.168.0.231/file/go/go1.20.7.linux-amd64.tar.gz"
 wget http://192.168.0.231/download/hour/go/go1.20.7.linux-amd64.tar.gz
 ls
fi

if [ -d "/usr/local/go" ];then
 echo "155,path exist yes,/usr/local/go"
else
 echo "156,path exist not,/usr/local/go"
  # 解压到系统目录下
 # sudo: /etc/sudoers is world writable
 # sudo: no valid sudoers sources found, quitting
 # sudo: unable to initialize policy plugin
 # 这个是linux为保证系统安全所做的限制，解决方法运行如下两条命令：
 echo "220,pkexec chmod 555 /etc/sudoers"
 pkexec chmod 555 /etc/sudoers
 echo "250,sudo tar -C /usr/local -xzf /home/going/workspace/acs/a/c/download/go/go1.20.7.linux-amd64.tar.gz"
 sudo tar -C /usr/local -xzf /home/going/workspace/acs/a/c/download/go/go1.20.7.linux-amd64.tar.gz
 cd /usr/local
 ls
fi

echo "GOROOT="
GOROOT=`sed '/^export GOROOT=/!d;s/.*=//' /etc/profile`  
echo $GOROOT 

echo "INSTALLGO="
INSTALLGO=`sed '/^INSTALLGO=/!d;s/.*=//' /etc/profile`  
echo $INSTALLGO 
cat /etc/profile

# vi /etc/profile
# export GOROOT=/usr/local/go         // Go 的安装目录。也就是刚才解压缩指定的路径
# export GOPATH=/home/going/workspace/acs/a/c/code/go   // 本机配置的 Go 代码目录
# export GOBIN=$GOROOT/bin           // Go 代码编译后的可执行文件存放目录
# export PATH=$PATH:$GOPATH:$GOBIN:$GOROOT/bin    // 将 Go 安装目录添加进操作系统 PATH 路径

if ! [[ $GOROOT == *go* ]]; then
echo "! GOROOT is go, # vi /etc/profile" 
echo "export GOROOT=/usr/local/go" >> /etc/profile
echo "export GOPATH=/home/going/workspace/acs/a/c/code/go" >> /etc/profile
echo "export GOBIN=$GOROOT/bin" >> /etc/profile
echo "export PATH=/usr/local/go/bin:$PATH" >> /etc/profile
echo "INSTALLGO=1" >> /etc/profile
fi

if  !  [ -d "mkdir -p /home/going/workspace/acs/a/s/code/hello/" ]; then
 echo "mkdir -p /home/going/workspace/acs/a/s/code/hello/" 
 mkdir -p /home/going/workspace/acs/a/s/code/hello/
 cd /home/going/workspace/acs/a/s/code/hello/
fi

if ! [[ $GOROOT == *go* ]]; then
  # 保存退出文件，并重启配置文件
 echo "source /etc/profile,保存退出文件，并重启配置文件"
 source /etc/profile
 echo "/usr/local/go/bin/go version # 安装好后，需要检查 Golang 是否安装成功："
 /usr/local/go/bin/go version
 cd /usr/local/go/bin
 echo "go version # 安装好后，需要检查 Golang 是否安装成功："
 go version
 cd /home/going/workspace/acs/a/s/code/hello/
 wget http://192.168.0.231/acs/a/s/code/hello/test110.go.txt
 wget http://192.168.0.231/acs/a/s/code/hello/test120.go.txt
 # 将main1.c重命名为main.c：
 # [root@linux265 ~]# rename main1.c main.c main1.c
 rename test110.go.txt test110.go test110.go.txt
 rename test120.go.txt test120.go test120.go.txt
 ls
 echo "go run /home/going/workspace/acs/a/s/code/hello/test110.go"
 go run /home/going/workspace/acs/a/s/code/hello/test110.go
 go run /home/going/workspace/acs/a/s/code/hello/test120.go
 go build test110.go
 go build test120.go
 /home/going/workspace/acs/a/s/code/hello/test110
 /home/going/workspace/acs/a/s/code/hello/test120
 ./test110
 ./test120
 # 在centos里执行二进制文件时报出错误：cannot execute binary file    正确应该是直接./a就行了。
 # 原因分析及解决办法
 #1、文件没有权限：chmod 777 二进制文件名    chmod 777 test110
 # 2、没有root权限：sudo root
 #3、在本地window/mac系统下go build生成二进制文件后，拿到centos系统中去编译：env GOOS=linux GOARCH=amd64 go build
fi

#=being.ftp=
if  !  [ -d "/home/going/workspace/acs/" ]; then
 mkdir -p /home/going/workspace/acs/
fi

if  !  [ -d "/home/going/workspace/acs/a/" ]; then
 mkdir -p /home/going/workspace/acs/a/
fi

chmod a-w /home/going/workspace/acs/
chmod 777 /home/going/workspace/acs/a/
cd /home/going/workspace/acs/a
ls
echo "anon_root="
anon_root=`sed '/^anon_root=/!d;s/.*=//' /etc/vsftpd/vsftpd.conf`  
echo $anon_root 
#if ! [[ $anon_root == */* ]]; then
if  !  [ -f "/etc/vsftpd/vsftpd.conf" ];then
 #ftp,yum install vsftpd -y,yum install ftp -y
 yum install vsftpd -y
 yum install ftp -y
 # systemctl restart vsftpd 重启vsftpd服务
 # 添加用户,设置密码
 useradd ftpuser
 echo 1|passwd --stdin ftpuser
 # useradd admin
 useradd admin -b /home/going/workspace/acs
 useradd admin
 echo 1|passwd --stdin admin
 # 修改匿名用户的属主和属组
 chmod -R admin:admin /home/going/workspace/acs/a
 # cat /etc/vsftpd/vsftpd.conf
 cat >/etc/vsftpd/vsftpd.conf <<EOF
anonymous_enable=YES
local_enable=YES
write_enable=YES
local_umask=022
dirmessage_enable=YES
xferlog_enable=YES
connect_from_port_20=YES
xferlog_std_format=YES
listen=NO
listen_ipv6=YES
pam_service_name=vsftpd
userlist_enable=YES
# tcp_wrappers=YES
local_root=/home/going/workspace/acs
# 共享目录的基目录是/home/going/workspace/acs
chroot_local_user=YES
anon_root=/home/going/workspace/acs/a
# 匿名用户访问的目录
EOF
cd /home/going/workspace/acs/a
ls
echo "cat /etc/vsftpd/vsftpd.conf # 显示单个文件内容"
cat /etc/vsftpd/vsftpd.conf
 # systemctl enable vsftpd 设置开机自启动 
 systemctl enable vsftpd
 systemctl restart vsftpd
 # systemctl status vsftpd.service,最后看一下自己的vsftp开启状态：
 systemctl status vsftpd.service
 #  rename 's/example/new_example/' example
 # mv oldfile newfile
 # mv /home/going/workspace/acs/a/c/ /home/going/workspace/acs/c/all.bak
# /home/going/workspace/acs/a/c/
# ping baidu.com
 # ftp localhost, admin,1,exit
# ftp://1@192.168.0.227:21/a/
# ftp://1@192.168.0.227:21 
# ftp://1@192.168.0.231:21 
fi

echo "systemctl stop firewalld" 
systemctl stop firewalld
echo "systemctl disable firewalld" 
systemctl disable firewalld
 # 通过命令"sestatus"来查看seLinux是否开启,暂时禁用 SELinux,Current mode模式从target改为permissive,命令：sudo setenforce 0
 # sudo setenforce 0
 # sestatus
 #永久禁用SELinux,sudo vi /etc/sysconfig/selinux,将SELINUX=enforcing指令更改为SELINUX=disabled,命令重启系统时生效,sudo shutdown -r now
 sudo setenforce 0
 sestatus
#=end.ftp=

# cd /home/going/workspace/acs/a/c/etc/
# cd /etc/selinux/
# cat /etc/selinux/config

#=begin=config.new=
# 假设要将文件file.txt中所有的字符串"old"替换成"new"，可以使用以下命令：
echo "sed /home/going/workspace/acs/a/c/zbak/config.new" 
#sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /home/going/workspace/acs/a/c/zbak/config.new
sed -i 's/enforcing/disabled/g' /home/going/workspace/acs/a/c/zbak/config.new
cat /home/going/workspace/acs/a/c/zbak/config.new
# sed -i 's/disabled/enforcing/g' /home/going/workspace/acs/a/c/zbak/config.new
# cat /home/going/workspace/acs/a/c/zbak/config.new
#=end=config.new=

# =begin=ifcfg-eth0=/etc/sysconfig/network-scripts/ifcfg-eth0=
# Name=test
# name=`sed '/^Name=/!d;s/.*=//' net.config`  
# echo $name 
#  cat /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.new
 cat >/home/going/workspace/acs/a/c/zbak/ifcfg-eth0.new <<EOF
# Generated by parse-kickstart.1
TYPE=Ethernet
DEVICE=eth0
ONBOOT=yes
BOOTPROTO=static
DHCP_HOSTNAME=centos8.localdomain
PROXY_METHOD=none
BROWSER_ONLY=no
DEFROUTE=yes
IPV4_FAILURE_FATAL=no
NAME="System eth0"
IPV6INIT=no
IPV6_AUTOCONF=no
IPV6_DEFROUTE=no
IPV6_PEERDNS=no
IPV6_PEERROUTES=no
IPV6FORWARDING=no
IPV6_AUTOTUNNEL=no
IPADDR=192.168.0.227
NETMASK=255.255.255.0
GATEWAY=192.168.0.1
DNS1=192.168.0.1
# end.1
EOF

echo "BOOTPROTO="
BOOTPROTO=`sed '/^BOOTPROTO=/!d;s/.*=//' /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.new`  
echo $BOOTPROTO 
# 假设要将文件file.txt中所有的字符串"old"替换成"new"，可以使用以下命令：
echo "sed /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.new" 
#sed -i 's/BOOTPROTO="dhcp"/BOOTPROTO="static"/g' /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.new
#sed -i 's/BOOTPROTO=dhcp/BOOTPROTO="static"/g' /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.new
sed -i 's/BOOTPROTO=dhcp/BOOTPROTO=static/g' /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.new
#sed -i 's/BOOTPROTO="static"/BOOTPROTO=static/g' /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.new
cat /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.new

# BOOTPROTO=dhcp
if [[ $BOOTPROTO == *dhcp* ]]; then
echo "ok BOOTPROTO is dhcp" 
echo "IPADDR=192.168.0.227" >> /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.new
echo "NETMASK=255.255.255.0" >> /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.new
echo "GATEWAY=192.168.0.1" >> /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.new
echo "DNS1=192.168.0.1" >> /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.new
cat /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.new
fi
# =end=ifcfg-eth0=/etc/sysconfig/network-scripts/ifcfg-eth0=

# 在Linux上，使用`chmod`命令可以授予或剥夺文件的权限。如果脚本没有执行权限，可以使用以下命令添加
echo "chmod +x /home/going/workspace/acs/a/c/hello.sh" 
chmod +x /home/going/workspace/acs/a/c/hello.sh
# 显示文件全文
echo "cat /home/going/workspace/acs/a/c/hello.sh" 
cat /home/going/workspace/acs/a/c/hello.sh

echo "cat /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.old" 
cat /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.old
echo "cat /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.new" 
cat /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.new
echo "cat /etc/sysconfig/network-scripts/ifcfg-eth0" 
cat /etc/sysconfig/network-scripts/ifcfg-eth0
#=end=/etc/sysconfig/network-scripts/ifcfg-eth0=

#=begin=sshd_config=/etc/ssh/sshd_config=
# 假设要将文件file.txt中所有的字符串"old"替换成"new"，可以使用以下命令：
#ssh配置文件中参数 PasswordAuthentication【密码认证 】默认为no，表示禁止使用密码认证登录，导致winscp不能正常连接vbox，
# 所以我们要修改ssh配置文件中的 PasswordAuthentication参数值，实现正常的登录访问。
echo "sed /home/going/workspace/acs/a/c/zbak/sshd_config.new" 
sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /home/going/workspace/acs/a/c/zbak/sshd_config.new
cat /home/going/workspace/acs/a/c/zbak/sshd_config.new

echo "cat /home/going/workspace/acs/a/c/zbak/sshd_config.old" 
cat /home/going/workspace/acs/a/c/zbak/sshd_config.old

echo "cat /home/going/workspace/acs/a/c/zbak/sshd_config.new" 
cat /home/going/workspace/acs/a/c/zbak/sshd_config.new
#=end=sshd_config=/etc/ssh/sshd_config=

#fix
if  [ -f "/home/going/workspace/acs/a/c/zbak/config.old" ];then
 echo "\cp -rf /home/going/workspace/acs/a/c/zbak/config.new /etc/selinux/config" 
 \cp -rf /home/going/workspace/acs/a/c/zbak/config.new /etc/selinux/config
 cat /etc/selinux/config
fi

if  [ -f "/home/going/workspace/acs/a/c/zbak/ifcfg-eth0.old" ];then
 echo "\cp -rf /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.new /etc/sysconfig/network-scripts/ifcfg-eth0" 
 \cp -rf /home/going/workspace/acs/a/c/zbak/ifcfg-eth0.new /etc/sysconfig/network-scripts/ifcfg-eth0
fi

if  [ -f "/home/going/workspace/acs/a/c/zbak/sshd_config.old" ];then
 echo "\cp -rf /home/going/workspace/acs/a/c/zbak/sshd_config.new /etc/ssh/sshd_config" 
 \cp -rf /home/going/workspace/acs/a/c/zbak/sshd_config.new /etc/ssh/sshd_config
  cat /home/going/workspace/acs/a/c/zbak/sshd_config.new
  cat /etc/ssh/sshd_config
fi

# ok
echo "cat /etc/selinux/config"
cat /etc/selinux/config

echo "cat /etc/sysconfig/network-scripts/ifcfg-eth0"
cat /etc/sysconfig/network-scripts/ifcfg-eth0

echo "cat /etc/ssh/sshd_config"
cat /etc/ssh/sshd_config

# 修改成功之后需要重新启动ssh服务才生效,重启命令如下
echo "service sshd restart"
service sshd restart

# 重启网络服务之前,显示IP 地址,ip addr show eth0
echo "ip addr show eth0"
ip addr show eth0

# 重启网络服务,可以使用以下命令重启：
echo "systemctl restart network #重启网络服务"
systemctl restart network

# 重启网络服务之后,检查 IP 地址是否已经生效，可以使用以下命令检查：
echo "ip addr show eth0"
ip addr show eth0

sleep 1 && echo "sleep 1/3"
sleep 1 && echo "sleep 2/3"
sleep 1 && echo "sleep 3/3"

# vagrant up
# vagrant ssh
# ping baidu.com
# su root
# --安装--wget工具体积小但功能完善，它支持断点下载功能，同时支持FTP和HTTP下载方式，支持代理服务器和设置起来方便简单。
# --输入以下命令,wget --version,检查wget是否安装成功：
# yum install -y wget
# wget --version
# wget -O - http://192.168.0.231/file/ipssh/home/going/workspace/acs/a/s/etc/ipsshxsc/hello.sh | sh
# wget -O - http://192.168.0.231/file/ipssh/home/going/workspace/acs/a/s/etc/ipsshxsc/sh1.192.168.0.227.sh | sh
# systemctl restart network
# systemctl stop firewalld.service       关闭防火墙
# systemctl disable firewalld.service   禁止防火墙开机启动
# 可以通过命令"sestatus"来查看seLinux是否开启,暂时禁用 SELinux,将SELinux 模式从target改为permissive,请在终端中输入以下命令：sudo setenforce 0
# sudo setenforce 0
# 永久禁用 selinux
# 在关闭selinux之前，可以通过命令"sestatus"来查看seLinux是否开启
# sestatus
# 需要修改/etc/selinux/config 文件，将SELINUX=enforcing改为SELINUX=disabled 
# 保存并重启，之后看到的selinux就被关闭了。
# 修改ip参数
# cd /home/going/workspace/acs/c/all
# bash hello.sh
# bash ipssh.sh
# sh hello.sh
# sh ipssh.sh
# sed '$a xxx' a.txt
# r  No such file or directory
# /home/going/workspace/acs/a/c/code/go
# ping baidu.com
 #  rename 's/example/new_example/' example
 # mv oldfile newfile
 # mv /home/going/workspace/acs/a/c/ /home/going/workspace/acs/c/all.bak
# /home/going/workspace/acs/a/c/
# ping baidu.com
# 本机测试,安装ftp客户端,ftp localhost command not found,yum install ftp -y
# yum install ftp -y
# ftp localhost command not found
# ftp localhost>admin>1>mkdir cy> exit
# ftp://1@192.168.0.227:21/a/
# ftp://1@192.168.0.227:21 
# ftp://1@192.168.0.231:21 
# 重启vsftpd服务并设置开机自启动
# systemctl restart vsftpd
# systemctl enable vsftpd
# 最后看一下自己的vsftp开启状态：
# systemctl status vsftpd.service
# 客户端
#[ root@localhost ~]# yum install -y lftp
#[ root@localhost ~]# lftp testuser1@127.0.0.1
#[ root@localhost ~]# lftp admin@127.0.0.1
# Password: 
# lftp testuser1@127.0.0.1:~> 
